 public void addInterest(double percent) {
    String loginSql = "SELECT t_id \n"
    + "FROM MarketAccounts ";

    ArrayList<Integer> taxidList = new ArrayList<Integer>();

    try (Connection conn = DriverManager.getConnection(Main.url);
        PreparedStatement pstmt = conn.prepareStatement(loginSql)) {
        
        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            taxidList.add(rs.getInt("taxid"));
        }

        conn.close();
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }

    // calculate average monthly balance for each account
    ArrayList<Double> avgBalList = new ArrayList<Double>();
    for (int i = 0; i < taxidList.size(); i++ ) {
        
        String avgBalSql = "SELECT AVG(balance) as avg \n"
        + "FROM DailyBalance "
        + "WHERE taxid = ?";

        int aid = taxidList.get(i);

        try (Connection conn = DriverManager.getConnection(Main.url);
            PreparedStatement pstmt = conn.prepareStatement(avgBalSql)) {
            
            pstmt.setInt(1,aid);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                avgBalList.add(rs.getDouble("avg"));
            }

            conn.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    for (int i = 0; i < taxidList.size(); i++) {
        int taxid = taxidList.get(i);
        double balance = avgBalList.get(i);

        double interestMoney = balance * percent * 0.01;
        interestMoney = (double) Math.round(interestMoney * 100) / 100;

        // Update Market account balance
        String systemupdatesql = "UPDATE MarketAccounts SET balance = balance + ? WHERE taxid = ?";

        try (Connection conn = DriverManager.getConnection(Main.url);
            PreparedStatement pstmt = conn.prepareStatement(systemupdatesql)) {
            
            pstmt.setDouble(1, interestMoney);
            pstmt.setInt(2, taxid);
            pstmt.executeUpdate();

            System.out.println("Added interest amount " + Double.toString(interestMoney) + " for user " + Integer.toString(taxid));
            conn.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        //Store transaction
        Sys s = new Sys();
        String today = s.getToday();
        Transaction t = new Transaction();
        t.storeInterestTransaction(today, taxid, interestMoney);

    }
}

// returns list of taxid who have traded at least 1000 shares in last month
public ArrayList<Integer> getActiveCustomers() {

    String activesql = "SELECT taxid \n"
    + "FROM (\n"
        + "SELECT taxid, SUM(shares) as sum \n"
        + "FROM Transactions \n"
        + "WHERE type = 'b' OR type = 's' \n"
        + "GROUP BY taxid )"
    + "WHERE sum > 999";

    ArrayList<Integer> list = new ArrayList<Integer>();

    try (Connection conn = DriverManager.getConnection(Main.url);
        PreparedStatement pstmt = conn.prepareStatement(activesql)) {
    
        ResultSet rs = pstmt.executeQuery();
        while (rs.next()) {
            list.add(rs.getInt("taxid"));
        }
        conn.close();
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    return list;
}

// returns list of taxid who have earned at least $10000 (from stocks and interest)
public ArrayList<Integer> getDTER() {

    String dtersql = "SELECT taxid \n"
    + "FROM (\n"
        + "SELECT taxid, SUM(earnings) as sum \n"
        + "FROM Transactions \n"
        + "GROUP BY taxid )"
    + "WHERE sum > 10000";

    ArrayList<Integer> list = new ArrayList<Integer>();

    try (Connection conn = DriverManager.getConnection(Main.url);
        PreparedStatement pstmt = conn.prepareStatement(dtersql)) {
    
        ResultSet rs = pstmt.executeQuery();
        while (rs.next()) {
            list.add(rs.getInt("taxid"));
        }
        conn.close();
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    return list;
}

public Object[][] getCustReport(int taxid) {

    // count stock accounts
    String countsql = "SELECT COUNT(*) as count\n"
    + "FROM Stocks \n"
    + "WHERE taxid = ? ";

    int count = 0;

    try (Connection conn = DriverManager.getConnection(Main.url);
    PreparedStatement pstmt = conn.prepareStatement(countsql)) {
    
        pstmt.setInt(1, taxid);
        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            count = rs.getInt("count");
        }
        conn.close();
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }

    Object[][] res = new Object[count][3];

    String reportsql = "SELECT shares, aid, buyprice \n"
    + "FROM Stocks \n"
    + "WHERE taxid = ?";

    try (Connection conn = DriverManager.getConnection(Main.url);
        PreparedStatement pstmt = conn.prepareStatement(reportsql)) {
        
        pstmt.setInt(1, taxid);
        ResultSet rs = pstmt.executeQuery();

        int i = 0;
        while (rs.next()) {
            res[i][0] = Integer.toString(rs.getInt("shares"));
            res[i][1] = rs.getString("aid");
            res[i][2] = new DecimalFormat("#.00").format(rs.getDouble("buyprice"));
            i++;
        }
        conn.close();
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    return res;
}

}


  // public static int get_total_shares(String taxID){
    //     String QUERY =  "SELECT * " +
    //                     "FROM StockTransactions " +
    //                     "WHERE CustomerTAXID = " + "'" + taxID + "'";

    //     ResultSet resultSet = Utility.sql_query(QUERY);

    //     int sum = 0;
    //     try{
    //         while(resultSet.next()){
    //             int shares = resultSet.getInt("shares");

    //             sum += Math.abs(shares);
    //         }
    //     } catch(Exception e){
    //         e.printStackTrace();
    //     }

    //     return sum;
    // }

    // public static double get_total_profit(String taxID){
    //     String QUERY =  "SELECT * " +
    //                     "FROM StockTransactions " +
    //                     "WHERE CustomerTAXID = " + "'" + taxID + "'";

    //     ResultSet resultSet = Utility.sql_query(QUERY);

    //     double sum = 0;
    //     try{
    //         while(resultSet.next()){
    //             double profit = resultSet.getDouble("profit");

    //             sum += profit;
    //         }
    //     } catch(Exception e){
    //         e.printStackTrace();
    //     }

    //     return sum;
    // }

    // public static String get_transactions(String taxID){
    //     String QUERY =  "SELECT * " +
    //                     "FROM StockTransactions " +
    //                     "WHERE CustomerTAXID = " + "'" + taxID + "'";

    //     ResultSet resultSet = Utility.sql_query(QUERY);

    //     String res = "";

    //     try{
    //         while(resultSet.next()){
    //             String date = resultSet.getString("date");
    //             String cTid = resultSet.getString("cTid");
    //             String actorID = resultSet.getString("actorID");
    //             double price = resultSet.getDouble("price");
    //             int shares = resultSet.getInt("shares");
    //             double profit = resultSet.getDouble("profit");


    //             res += "Date: " + date;
    //             res += ", Transaction type: " + ((shares>0) ? "Buy" : "Sell");
    //             res += ", Customer TaxID: "  + cTid;
    //             res += ", Stock symbol: " + actorID;
    //             res += ", Price: " + (new Double(price)).toString();
    //             res += ", Shares: " + (new Integer(shares)).toString();
    //             res += ", Profit: " + (new Double(profit)).toString();
    //             res += "\n";
    //         }
    //     } catch(Exception e){
    //         e.printStackTrace();
    //     }

    //     return res;
    // }